function main (.text) {
    int32_t var1
    int32_t var2
    0x400506: push rbp
    0x400507: rbp = rsp # mov rbp, rsp
    0x40050a: rsp -= 16 # sub rsp, 0x10
    0x40050e: var1 = 0 # mov dword ptr [rbp - 4], 0
    0x400515: var2 = 2 # mov dword ptr [rbp - 8], 2
    0x40051c: jmp 0x400560
    loop {
        # 0x400560: cmp dword ptr [rbp - 4], 9
        # 0x400564: jg 0x400570
        if (var1 > 9)  goto 0x400570
        0x400566: eax = var1 # mov eax, dword ptr [rbp - 4]
        0x400569: eax += eax # add eax, eax
        # 0x40056b: cmp eax, dword ptr [rbp - 8]
        # 0x40056e: jne 0x40051e
        if (eax == var2)  goto 0x400570
        0x40051e: edi = 0x400614 "1" # mov edi, 0x400614
        0x400523: call 0x4003e0 <puts@plt>
        # 0x400528: cmp dword ptr [rbp - 4], 8
        # 0x40052c: jne 0x400558
        if (var1 == 8)  goto 0x40052e
        0x400558: var1 += 1 # add dword ptr [rbp - 4], 1
        0x40055c: var2 += 1 # add dword ptr [rbp - 8], 1
    }
    # loopend 1
    0x40052e: jmp 0x400543
    loop {
        # 0x400543: cmp dword ptr [rbp - 8], 3
        # 0x400547: jle 0x400530
        if (var2 > 3)  goto 0x400549
        0x400530: eax = var1 # mov eax, dword ptr [rbp - 4]
        0x400533: eax += 10 # add eax, 0xa
        0x400536: var2 += eax # add dword ptr [rbp - 8], eax
        0x400539: edi = 0x400616 "2" # mov edi, 0x400616
        0x40053e: call 0x4003e0 <puts@plt>
    }
    0x400549: edx = var1 # mov edx, dword ptr [rbp - 4]
    0x40054c: eax = edx # mov eax, edx
    0x40054e: eax <<= 3 # shl eax, 3
    0x400551: eax += edx # add eax, edx
    0x400553: var2 += eax # add dword ptr [rbp - 8], eax
    0x400556: jmp 0x400570
    # loopend 2
    0x400570: edi = 0x400618 "3" # mov edi, 0x400618
    0x400575: call 0x4003e0 <puts@plt>
    0x40057a: eax = 0 # mov eax, 0
    0x40057f: leave 
    0x400580: ret 
}
