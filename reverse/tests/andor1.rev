function main (.text) {
    int32_t var1
    int64_t var2
    int32_t var3
    int32_t var4
    int32_t var5
    0x400506: push rbp
    0x400507: rbp = rsp # mov rbp, rsp
    0x40050a: rsp -= 32 # sub rsp, 0x20
    0x40050e: var1 = edi # mov dword ptr [rbp - 0x14], edi
    0x400511: var2 = rsi # mov qword ptr [rbp - 0x20], rsi
    0x400515: jmp 0x400533
    loop {
        # 0x400533: cmp dword ptr [rbp - 4], 9
        # 0x400537: jg 0x40053f
        if (var3 <= 9) {
            # 0x400539: cmp dword ptr [rbp - 8], 9
            # 0x40053d: jle 0x400517
            and if (var4 <= 9)
        } else {
            0x40053f: eax = var3 # mov eax, dword ptr [rbp - 4]
            # 0x400542: cmp eax, dword ptr [rbp - 0xc]
            # 0x400545: je 0x400517
            if (eax != var5)  goto 0x400547
        }
        0x400517: edi = 0x4005d4 "1" # mov edi, 0x4005d4
        0x40051c: call 0x4003e0 <puts@plt>
        0x400521: jmp 0x40052d
        loop {
            # 0x40052d: cmp dword ptr [rbp - 0xc], 0x13
            # 0x400531: jle 0x400523
            if (var5 > 19)  goto 0x400533
            0x400523: edi = 0x4005d6 "2" # mov edi, 0x4005d6
            0x400528: call 0x4003e0 <puts@plt>
        }
    }
    0x400547: eax = 0 # mov eax, 0
    0x40054c: leave 
    0x40054d: ret 
}
